<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd"
                 version="2.0">
    <named-query name="getAllTasksEvents">
        <query>select t from TaskEventImpl t where t.taskId = :taskId</query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllBAMTaskSummaries">
        <query>select b from BAMTaskSummaryImpl b where b.taskId = :taskId</query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="deleteBAMTaskSummariesForTask">
        <query>delete from BAMTaskSummaryImpl b where b.taskId = :taskId</query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="deleteAllBAMTaskSummaries">
        <query>delete from BAMTaskSummaryImpl b</query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasksAdmin">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasks">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl and u.actualOwner = :userId order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
     <named-query name="getUserAuditTaskById">
        <query>
            select u from UserAuditTaskImpl u where u.taskId = :taskId  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getGroupAuditTaskById">
        <query>
            select g from GroupAuditTaskImpl g where g.taskId = :taskId   
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasksByStatus">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl and u.actualOwner = :userId and u.status in :statuses  order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasksByDueDate">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl and u.actualOwner = :userId and u.dueDate = :dueDate order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasksByStatusByDueDate">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl and u.actualOwner = :userId and u.status in :statuses and u.dueDate = :dueDate order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllUserAuditTasksByStatusByDueDateOptional">
        <query>
            select u from UserAuditTaskImpl u where TYPE(u) = org.jbpm.services.task.audit.impl.model.UserAuditTaskImpl and u.actualOwner = :userId and u.status in :statuses  and (u.dueDate = :dueDate or u.dueDate = null) order by u.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasksAdmin">
        <query>
            select g from GroupAuditTaskImpl g order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasks">
        <query>
            select g from GroupAuditTaskImpl g where LOCATE(:groupIds, g.potentialOwners) > 0 order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasksByStatus">
        <query>
            select g from GroupAuditTaskImpl g where LOCATE(:groupIds, g.potentialOwners) > 0 and  g.status in :statuses  order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasksByDueDate">
        <query>
            select g from GroupAuditTaskImpl g where LOCATE(:groupIds, g.potentialOwners) > 0 and g.dueDate = :dueDate order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasksByStatusByDueDate">
        <query>
            select g from GroupAuditTaskImpl g where LOCATE(:groupIds, g.potentialOwners) > 0 and g.status in :statuses and g.dueDate = :dueDate order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllGroupAuditTasksByStatusByDueDateOptional">
        <query>
            select g from GroupAuditTaskImpl g where LOCATE(:groupIds, g.potentialOwners) > 0 and g.status in :statuses  and (g.dueDate = :dueDate or g.dueDate = null) order by g.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllHistoryAuditTasks">
        <query>
            select h from HistoryAuditTaskImpl h order by h.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
    <named-query name="getAllHistoryAuditTasksByUser">
        <query>
            select h from HistoryAuditTaskImpl h where h.actualOwner = :owner order by h.taskId DESC  
        </query>
        <!-- hint name="org.hibernate.timeout" value="200"/ -->
    </named-query>
</entity-mappings>